{% extends "layout.njk" %}
{% block head %}
    <title>Produtos</title>
    <link rel="stylesheet" href="/product.css"/>
{% endblock %}

{% block content %}
    <div class="content">
        <h4>Cadastro de Produtos</h4>

        {# <!-- Seu formulário HTML -->
        <form class="form-product" action="/products" method="post" onSubmit="registerProduct(event)">
            <div class="row">
                <!-- Exibe a mensagem de erro se houver -->
                <p class="message-error {{ messageClass }}">{{ message }}</p>

                <!-- Exibe a mensagem de sucesso se houver -->
                <p class="message-success {{ successClass }}" id="successMessage"></p>

                <div class="col-md-3">
                    <label class="form-label">Código do produto *</label>
                    <input class="form-control" type="text" name="barcode" placeholder="Código do produto" value="{{barcode}}"/>
                </div>

                <!-- Campo: Nome do Produto -->
                <div class="col-md-3">
                    <label class="form-label">Nome do produto *</label>
                    <input class="form-control" type="text" name="name" placeholder="Nome do produto" value="{{name}}"/>
                </div>

                <!-- Campo: Preço de Venda -->
                <div class="col-md-3">
                    <label class="form-label">Preço de venda *</label>
                    <input class="form-control" type="text" name="salePrice" placeholder="Preço de venda" value="{{salePrice}}"/>
                </div>

                <!-- Campo: Quantidade -->
                <div class="col-md-3">
                    <label class="form-label">Quantidade</label>
                    <input class="form-control" type="text" name="amount" placeholder="Quantidade" value="{{amount}}"/>
                </div>

                <div class="col-md-3">
                    <label class="form-label">Data de Vencimento</label>
                    <input class="form-control" type="date" name="expirationDate" placeholder="Data de validade" value="{{expirationDate}}"/>
                </div>

                <!-- Botão de Cadastro -->
                <div class="col-md-3">
                    <br/>
                    <button class="btn btn-primary bnt-product mt-2" type="submit">Cadastrar</button>
                </div>
            </div>
        </form> #}


        <!-- Seu formulário HTML -->
<form class="form-product" action="/products" method="post" onSubmit="registerProduct(event)">
    <div class="row">
        <!-- Exibe a mensagem de erro se houver -->
        <p class="message-error {{ messageClass }}">{{ message }}</p>

        <!-- Exibe a mensagem de sucesso se houver -->
        <p class="message-success {{ successClass }}" id="successMessage"></p>

        <div class="col-md-3">
            <label class="form-label">Código do produto *</label>
            <input class="form-control" type="text" name="barcode" placeholder="Código do produto" value="{{barcode}}"/>
        </div>

        <!-- Campo: Nome do Produto -->
        <div class="col-md-3">
            <label class="form-label">Nome do produto *</label>
            <input class="form-control" type="text" name="name" placeholder="Nome do produto" value="{{name}}"/>
        </div>

        <!-- Campo: Preço de Venda -->
        <div class="col-md-3">
            <label class="form-label">Preço de venda *</label>
            <input class="form-control" type="text" name="salePrice" placeholder="Preço de venda" value="{{salePrice}}"/>
        </div>

        <!-- Campo: Quantidade -->
        <div class="col-md-3">
            <label class="form-label">Quantidade</label>
            <input class="form-control" type="text" name="amount" placeholder="Quantidade" value="{{amount}}"/>
        </div>

        <div class="col-md-3">
            <label class="form-label">Data de Vencimento</label>
            <input class="form-control" type="date" name="expirationDate" placeholder="Data de validade" value="{{expirationDate}}"/>
        </div>

        <!-- Botão de Cadastro -->
        <div class="col-md-3">
            <br/>
            <button class="btn btn-primary bnt-product mt-2" type="submit">Cadastrar</button>
        </div>
    </div>
</form>

        <h4>Listagem de Produtos</h4>
        <form class="search" action="/productslist" method="get" id="searchForm">
            <div class="col-md-3">
                <input class="form-control" type="text" placeholder="Código do produto" name="searchBarcode" value="{{searchBarcode}}"/>
            </div>
            <div class="col-md-3">
                <input class="form-control" type="text" placeholder="Nome do produto" name="nome" value="{{nome}}"/>
            </div>

            <div>
                <button class="btn btn-primary" type="button" id="btnSearch">Pesquisar</button>
            </div>
            <div class="col-md-2">
                <button class="btn btn-secondary" type="reset" onclick="clearSearch()">Limpar</button>
            </div>
        </form>

        <table class="table table-striped table-hover">
            <tr>
                <th>Código do Produto</th>
                <th>Nome</th>
                <th>Preço de Venda</th>
                <th>Quantidade</th>
                <th>Data de Vencimento</th>
                <th>Ação</th>
            </tr>
            {% for product in products %}
                <tr>
                    <td>{{ product.barcode }}</td>
                    <td>{{ product.name }}</td>
                    <td>{{ product.formattedSalePrice }}</td>
                    <td>{{ product.amount }}</td>
                    <td>{{ product.formattedExpirationDate }}</td>
                    <td>
                        <div class="action">
                            <a href="/products/edit/{{product.id}}">
                                <i class="bi bi-pencil-fill"></i>
                            </a>
                            <form  name="myform" action="/products/delete/{{product.id}}?_method=DELETE" method="post" onSubmit="deleteProduct(event)">
                                <button type="submit" class="delete">
                                    <i class="bi bi-trash-fill"></i>
                                </button>
                            </form>
                        </div>
                    </td>
                </tr>
            {% endfor %}
        </table>

        <div class="pagination">
            {% if totalPages > 1 %}
                <a href="/productslist?page=1" class="first">&lt;&lt;</a>
                <a href="/productslist?page={{ currentPage - 1 }}" class="prev">&lt;</a>

                {% for page in range(1, totalPages + 1) %}
                    <a href="/productslist?page={{ page }}" {% if page == currentPage %}class="active"{% endif %}>{{ page }}</a>
                {% endfor %}

                <a href="/productslist?page={{ currentPage + 1 }}" class="next">&gt;</a>
                <a href="/productslist?page={{ totalPages }}" class="last">&gt;&gt;</a>
            {% endif %}
        </div>

        <script>
            window.addEventListener('keydown', function (e) {
                if (e.keyIdentifier == 'U+000A' || e.keyIdentifier == 'Enter' || e.keyCode == 13) {
                    if (e.target.nodeName == 'INPUT' && e.target.type == 'text' && e.target.name == 'barcode') {
                        e.preventDefault();
                        return false;
                    }
                }
            }, true);

            function deleteProduct(e) {
                if (!window.confirm("Deseja realmente deletar o produto?")) {
                    e.returnValue = false;
                }
            }

      
    document.addEventListener("DOMContentLoaded", function () {
        const paginationLinks = document.querySelectorAll(".pagination a");
        const prevButton = document.querySelector(".pagination .prev");
        const nextButton = document.querySelector(".pagination .next");
        const firstButton = document.querySelector(".pagination .first");
        const lastButton = document.querySelector(".pagination .last");
        const totalPages = parseInt("{{ totalPages }}");
        const currentPage = parseInt("{{ currentPage }}");

        // Função para lidar com a mudança de página
        function goToPage(page) {
            if (page >= 1 && page <= totalPages) {
                const currentUrl = new URL(window.location.href);
                currentUrl.searchParams.set("page", page);
                window.location.href = currentUrl.toString();
            }
        }

        // Adicionar ouvintes de evento para os botões de número
        paginationLinks.forEach(link => {
            link.addEventListener("click", function (e) {
                e.preventDefault();
                const page = parseInt(this.getAttribute("href").split("=")[1]);
                goToPage(page);
            });
        });

        // Adicionar ouvintes de evento para os botões de navegação
        prevButton.addEventListener("click", function (e) {
            e.preventDefault();
            if (currentPage > 1) {
                goToPage(currentPage - 1);
            }
        });

        nextButton.addEventListener("click", function (e) {
            e.preventDefault();
            if (currentPage < totalPages) {
                goToPage(currentPage + 1);
            }
        });

        firstButton.addEventListener("click", function (e) {
            e.preventDefault();
            goToPage(1);
        });

        lastButton.addEventListener("click", function (e) {
            e.preventDefault();
            goToPage(totalPages);
        });
    });




            document.addEventListener("DOMContentLoaded", function () {
                const btnSearch = document.getElementById("btnSearch");
                const searchForm = document.getElementById("searchForm");

                btnSearch.addEventListener("click", function () {
                    // Adicione aqui lógica adicional, se necessário
                    searchForm.submit();
                });

                // Adicione um ouvinte de tecla para o formulário
                searchForm.addEventListener("keydown", function (e) {
                    if (e.key === "Enter") {
                        // Impedir a ação padrão do Enter
                        e.preventDefault();

                        // Adicione aqui lógica adicional, se necessário
                        searchForm.submit();
                    }
                });
            });

            function clearSearch() {
                // Limpar os campos de pesquisa
                document
                    .querySelector('input[name="searchBarcode"]')
                    .value = '';
                document
                    .querySelector('input[name="nome"]')
                    .value = '';
                // Submeter o formulário após limpar
                document
                    .querySelector('.search')
                    .submit();
            }

 

              async function registerProduct(event) {
        event.preventDefault();

        // Limpa mensagens anteriores
        document.querySelector('.message-error').innerHTML = '';
        document.querySelector('.message-error').classList.remove('alert-danger');
        document.querySelector('.message-success').innerHTML = '';
        document.querySelector('.message-success').classList.remove('alert-success');

        // Obtém valores do formulário
        const barcodeInput = document.querySelector('input[name="barcode"]');
        const nameInput = document.querySelector('input[name="name"]');
        const salePriceInput = document.querySelector('input[name="salePrice"]');
        const amountInput = document.querySelector('input[name="amount"]');
        const expirationDateInput = document.querySelector('input[name="expirationDate"]');

        // Lógica de validação
        if (!barcodeInput.value || !nameInput.value || !salePriceInput.value || !amountInput.value) {
            // Exibe mensagem de erro de validação
            document.querySelector('.message-error').innerHTML = 'Preencha os campos obrigatórios (*) para continuar!';
            document.querySelector('.message-error').classList.add('alert-danger');
        } else {
            try {
                // Submissão assíncrona usando fetch (ajuste conforme seu backend)
                const response = await fetch('/products', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        barcode: barcodeInput.value,
                        name: nameInput.value,
                        salePrice: salePriceInput.value,
                        amount: amountInput.value,
                        expirationDate: expirationDateInput.value
                    })
                });

                if (response.ok) {
                    // Exibe mensagem de sucesso
                    document.getElementById('successMessage').innerHTML = 'Produto cadastrado com sucesso!';
                    document.getElementById('successMessage').classList.add('alert-success');

                    // Limpa os inputs após o sucesso
                    barcodeInput.value = '';
                    nameInput.value = '';
                    salePriceInput.value = '';
                    amountInput.value = '';
                    expirationDateInput.value = '';
                } else {
                    // Exibe mensagem de erro do servidor, se aplicável
                    const data = await response.json();
                    document.querySelector('.message-error').innerHTML = data.message;
                    document.querySelector('.message-error').classList.add('alert-danger');
                }
            } catch (error) {
                // Exibe mensagem de erro genérico
                document.querySelector('.message-error').innerHTML = 'Ocorreu um erro durante o cadastro do produto.';
                document.querySelector('.message-error').classList.add('alert-danger');
                console.error('Error:', error);
            }
        }
    }

            function buildSearchUrl(event) {
                const searchBarcodeValue = document
                    .querySelector('input[name="searchBarcode"]')
                    .value;
                const nomeValue = document
                    .querySelector('input[name="nome"]')
                    .value;

                const currentUrl = new URL(window.location.href);
                currentUrl
                    .searchParams
                    .set("page", "1");
                currentUrl
                    .searchParams
                    .set("searchBarcode", searchBarcodeValue);
                currentUrl
                    .searchParams
                    .set("nome", nomeValue);

                window.location.href = currentUrl.toString();

                event.preventDefault(); // Impede a submissão padrão do formulário
            }
        </script>

    {% endblock %}